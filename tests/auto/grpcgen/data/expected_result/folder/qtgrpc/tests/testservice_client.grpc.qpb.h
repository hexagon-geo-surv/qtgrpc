/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#ifndef QPROTOBUF_TESTSERVICE_CLIENT_H
#define QPROTOBUF_TESTSERVICE_CLIENT_H

#include <QtProtobuf/qprotobufmessage.h>
#include <QtProtobuf/qprotobufobject.h>
#include <QtProtobuf/qprotobuflazymessagepointer.h>
#include <QtProtobuf/qtprotobuftypes.h>

#include <QtGrpc/qgrpccallreply.h>
#include <QtGrpc/qgrpcclientbase.h>
#include <QtGrpc/qgrpcstream.h>

#include <memory>

#include "qtgrpc/tests/testservice.qpb.h"

namespace qtgrpc::tests {
namespace TestService {

class Client : public QGrpcClientBase
{
    Q_OBJECT

public:
    explicit Client(QObject *parent = nullptr);
    std::shared_ptr<QGrpcCallReply> testMethod(const qtgrpc::tests::SimpleStringMessage &arg);
    std::shared_ptr<QGrpcCallReply> testMethod(const qtgrpc::tests::SimpleStringMessage &arg, const QGrpcCallOptions &options);

    std::shared_ptr<QGrpcServerStream> testMethodServerStream(const qtgrpc::tests::SimpleStringMessage &arg);
    std::shared_ptr<QGrpcServerStream> testMethodServerStream(const qtgrpc::tests::SimpleStringMessage &arg, const QGrpcCallOptions &options);

    std::shared_ptr<QGrpcClientStream> testMethodClientStream(const qtgrpc::tests::SimpleStringMessage &arg);
    std::shared_ptr<QGrpcClientStream> testMethodClientStream(const qtgrpc::tests::SimpleStringMessage &arg, const QGrpcCallOptions &options);

    std::shared_ptr<QGrpcBidirStream> testMethodBiStream(const qtgrpc::tests::SimpleStringMessage &arg);
    std::shared_ptr<QGrpcBidirStream> testMethodBiStream(const qtgrpc::tests::SimpleStringMessage &arg, const QGrpcCallOptions &options);


};
} // namespace TestService
} // namespace qtgrpc::tests

#endif // QPROTOBUF_TESTSERVICE_CLIENT_H
