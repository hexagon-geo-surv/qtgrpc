/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#include "nopackage.qpb.h"
#include <QtProtobuf/qprotobufserializer.h>
#include <QtQml/qqmlengine.h>

static QtProtobuf::ProtoTypeRegistrar ProtoTypeRegistrarTestEnumGadget(TestEnumGadget::registerTypes);
void TestEnumGadget::registerTypes()
{
    qRegisterMetaType<TestEnum>();
    qRegisterMetaType<::TestEnumGadget::TestEnum>();
    qRegisterProtobufEnumType<::TestEnumGadget::TestEnum>();
}

EmptyMessage::~EmptyMessage() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 1> qt_protobuf_EmptyMessage_uint_data;
    const char qt_protobuf_EmptyMessage_char_data[14];
} qt_protobuf_EmptyMessage_metadata {
    // data
    {
        0, /* = version */
        0, /* = num fields */
        1, /* = field number offset */
        1, /* = property index offset */
        1, /* = field flags offset */
        12, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        13, /* = end-of-string-marker */
        // Field numbers:
        // Property indices:
        // Field flags:
    },
    // char_data
    /* metadata char_data: */
    "EmptyMessage\0" /* = full message name */
    /* field char_data: */
    ""
};

const QtProtobufPrivate::QProtobufPropertyOrdering EmptyMessage::propertyOrdering = {
    &qt_protobuf_EmptyMessage_metadata.data
};

void EmptyMessage::registerTypes()
{
    qRegisterMetaType<EmptyMessage>();
    qRegisterMetaType<EmptyMessageRepeated>();
    qRegisterMetaType<QQmlListProperty<EmptyMessage>>();
}

EmptyMessage::EmptyMessage()
    : QProtobufMessage(&EmptyMessage::staticMetaObject)
{
}

EmptyMessage::EmptyMessage(const EmptyMessage &other)
    : QProtobufMessage(other)
{
}

EmptyMessage &EmptyMessage::operator =(const EmptyMessage &other)
{
    QProtobufMessage::operator=(other);
    return *this;
}

EmptyMessage::EmptyMessage(EmptyMessage &&other) noexcept
    : QProtobufMessage(std::move(other))
{
}

EmptyMessage &EmptyMessage::operator =(EmptyMessage &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    return *this;
}

bool EmptyMessage::operator ==(const EmptyMessage &other) const
{
    return QProtobufMessage::isEqual(*this, other);
}

bool EmptyMessage::operator !=(const EmptyMessage &other) const
{
    return !this->operator ==(other);
}

SimpleIntMessage::~SimpleIntMessage() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_SimpleIntMessage_uint_data;
    const char qt_protobuf_SimpleIntMessage_char_data[31];
} qt_protobuf_SimpleIntMessage_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        16, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        17, /* = testFieldInt */
        30, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testFieldInt */
        // Property indices:
        0, /* = testFieldInt */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testFieldInt */
    },
    // char_data
    /* metadata char_data: */
    "SimpleIntMessage\0" /* = full message name */
    /* field char_data: */
    "testFieldInt\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering SimpleIntMessage::propertyOrdering = {
    &qt_protobuf_SimpleIntMessage_metadata.data
};

void SimpleIntMessage::registerTypes()
{
    qRegisterMetaType<SimpleIntMessage>();
    qRegisterMetaType<SimpleIntMessageRepeated>();
    qRegisterMetaType<QQmlListProperty<SimpleIntMessage>>();
}

SimpleIntMessage::SimpleIntMessage()
    : QProtobufMessage(&SimpleIntMessage::staticMetaObject),
      m_testFieldInt(0)
{
}

SimpleIntMessage::SimpleIntMessage(const SimpleIntMessage &other)
    : QProtobufMessage(other),
      m_testFieldInt(other.m_testFieldInt)
{
}

SimpleIntMessage &SimpleIntMessage::operator =(const SimpleIntMessage &other)
{
    QProtobufMessage::operator=(other);
    setTestFieldInt(other.m_testFieldInt);
    return *this;
}

SimpleIntMessage::SimpleIntMessage(SimpleIntMessage &&other) noexcept
    : QProtobufMessage(std::move(other))
{
    setTestFieldInt(std::exchange(other.m_testFieldInt, 0));
}

SimpleIntMessage &SimpleIntMessage::operator =(SimpleIntMessage &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestFieldInt(std::exchange(other.m_testFieldInt, 0));
    return *this;
}

bool SimpleIntMessage::operator ==(const SimpleIntMessage &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testFieldInt == other.m_testFieldInt;
}

bool SimpleIntMessage::operator !=(const SimpleIntMessage &other) const
{
    return !this->operator ==(other);
}

NoPackageExternalMessage::~NoPackageExternalMessage() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_NoPackageExternalMessage_uint_data;
    const char qt_protobuf_NoPackageExternalMessage_char_data[36];
} qt_protobuf_NoPackageExternalMessage_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        24, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        25, /* = testField */
        35, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "NoPackageExternalMessage\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering NoPackageExternalMessage::propertyOrdering = {
    &qt_protobuf_NoPackageExternalMessage_metadata.data
};

void NoPackageExternalMessage::registerTypes()
{
    qRegisterMetaType<NoPackageExternalMessage>();
    qRegisterMetaType<NoPackageExternalMessageRepeated>();
    qRegisterMetaType<QQmlListProperty<NoPackageExternalMessage>>();
}

NoPackageExternalMessage::NoPackageExternalMessage()
    : QProtobufMessage(&NoPackageExternalMessage::staticMetaObject),
      m_testField(nullptr)
{
}

NoPackageExternalMessage::NoPackageExternalMessage(const NoPackageExternalMessage &other)
    : QProtobufMessage(other),
      m_testField(nullptr)
{
    if (m_testField != other.m_testField) {
        *m_testField = *other.m_testField;
    }
}

NoPackageExternalMessage &NoPackageExternalMessage::operator =(const NoPackageExternalMessage &other)
{
    QProtobufMessage::operator=(other);
    if (m_testField != other.m_testField)
        *m_testField = *other.m_testField;
    return *this;
}

NoPackageExternalMessage::NoPackageExternalMessage(NoPackageExternalMessage &&other) noexcept
    : QProtobufMessage(std::move(other)),
m_testField(nullptr)
{
    if (m_testField != other.m_testField) {
        *m_testField = std::move(*other.m_testField);
    }
}

NoPackageExternalMessage &NoPackageExternalMessage::operator =(NoPackageExternalMessage &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    if (m_testField != other.m_testField)
        *m_testField = std::move(*other.m_testField);
    return *this;
}

bool NoPackageExternalMessage::operator ==(const NoPackageExternalMessage &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && (m_testField == other.m_testField
            || *m_testField == *other.m_testField)
;
}

bool NoPackageExternalMessage::operator !=(const NoPackageExternalMessage &other) const
{
    return !this->operator ==(other);
}

SimpleIntMessageExt *NoPackageExternalMessage::testField_p() const
{
    return m_testField ? m_testField.get() : nullptr;
}

SimpleIntMessageExt &NoPackageExternalMessage::testField() const
{
    return *m_testField;
}

void NoPackageExternalMessage::setTestField_p(SimpleIntMessageExt *testField)
{
    if (m_testField.get() != testField)
        m_testField.reset(testField);
}

void NoPackageExternalMessage::setTestField(const SimpleIntMessageExt &testField)
{
    if (*m_testField != testField)
        *m_testField = testField;
}

NoPackageMessage::~NoPackageMessage() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_NoPackageMessage_uint_data;
    const char qt_protobuf_NoPackageMessage_char_data[28];
} qt_protobuf_NoPackageMessage_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        16, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        17, /* = testField */
        27, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testField */
        // Property indices:
        0, /* = testField */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testField */
    },
    // char_data
    /* metadata char_data: */
    "NoPackageMessage\0" /* = full message name */
    /* field char_data: */
    "testField\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering NoPackageMessage::propertyOrdering = {
    &qt_protobuf_NoPackageMessage_metadata.data
};

void NoPackageMessage::registerTypes()
{
    qRegisterMetaType<NoPackageMessage>();
    qRegisterMetaType<NoPackageMessageRepeated>();
    qRegisterMetaType<QQmlListProperty<NoPackageMessage>>();
}

NoPackageMessage::NoPackageMessage()
    : QProtobufMessage(&NoPackageMessage::staticMetaObject),
      m_testField(nullptr)
{
}

NoPackageMessage::NoPackageMessage(const NoPackageMessage &other)
    : QProtobufMessage(other),
      m_testField(nullptr)
{
    if (m_testField != other.m_testField) {
        *m_testField = *other.m_testField;
    }
}

NoPackageMessage &NoPackageMessage::operator =(const NoPackageMessage &other)
{
    QProtobufMessage::operator=(other);
    if (m_testField != other.m_testField)
        *m_testField = *other.m_testField;
    return *this;
}

NoPackageMessage::NoPackageMessage(NoPackageMessage &&other) noexcept
    : QProtobufMessage(std::move(other)),
m_testField(nullptr)
{
    if (m_testField != other.m_testField) {
        *m_testField = std::move(*other.m_testField);
    }
}

NoPackageMessage &NoPackageMessage::operator =(NoPackageMessage &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    if (m_testField != other.m_testField)
        *m_testField = std::move(*other.m_testField);
    return *this;
}

bool NoPackageMessage::operator ==(const NoPackageMessage &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && (m_testField == other.m_testField
            || *m_testField == *other.m_testField)
;
}

bool NoPackageMessage::operator !=(const NoPackageMessage &other) const
{
    return !this->operator ==(other);
}

SimpleIntMessage *NoPackageMessage::testField_p() const
{
    return m_testField ? m_testField.get() : nullptr;
}

SimpleIntMessage &NoPackageMessage::testField() const
{
    return *m_testField;
}

void NoPackageMessage::setTestField_p(SimpleIntMessage *testField)
{
    if (m_testField.get() != testField)
        m_testField.reset(testField);
}

void NoPackageMessage::setTestField(const SimpleIntMessage &testField)
{
    if (*m_testField != testField)
        *m_testField = testField;
}


#include "moc_nopackage.qpb.cpp"
