/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#include "nopackageexternal.qpb.h"
#include <QtProtobuf/qprotobufserializer.h>
#include <QtQml/qqmlengine.h>

SimpleIntMessageExt::~SimpleIntMessageExt() = default;

static constexpr struct {
    QtProtobufPrivate::QProtobufPropertyOrdering::Data data;
    const std::array<uint, 5> qt_protobuf_SimpleIntMessageExt_uint_data;
    const char qt_protobuf_SimpleIntMessageExt_char_data[34];
} qt_protobuf_SimpleIntMessageExt_metadata {
    // data
    {
        0, /* = version */
        1, /* = num fields */
        2, /* = field number offset */
        3, /* = property index offset */
        4, /* = field flags offset */
        19, /* = message full name length */
    },
    // uint_data
    {
        // JSON name offsets:
        20, /* = testFieldInt */
        33, /* = end-of-string-marker */
        // Field numbers:
        1, /* = testFieldInt */
        // Property indices:
        0, /* = testFieldInt */
        // Field flags:
        QtProtobufPrivate::NoFlags, /* = testFieldInt */
    },
    // char_data
    /* metadata char_data: */
    "SimpleIntMessageExt\0" /* = full message name */
    /* field char_data: */
    "testFieldInt\0"
};

const QtProtobufPrivate::QProtobufPropertyOrdering SimpleIntMessageExt::propertyOrdering = {
    &qt_protobuf_SimpleIntMessageExt_metadata.data
};

void SimpleIntMessageExt::registerTypes()
{
    qRegisterMetaType<SimpleIntMessageExt>();
    qRegisterMetaType<SimpleIntMessageExtRepeated>();
    qRegisterMetaType<QQmlListProperty<SimpleIntMessageExt>>();
}

SimpleIntMessageExt::SimpleIntMessageExt()
    : QProtobufMessage(&SimpleIntMessageExt::staticMetaObject),
      m_testFieldInt(0)
{
}

SimpleIntMessageExt::SimpleIntMessageExt(const SimpleIntMessageExt &other)
    : QProtobufMessage(other),
      m_testFieldInt(other.m_testFieldInt)
{
}

SimpleIntMessageExt &SimpleIntMessageExt::operator =(const SimpleIntMessageExt &other)
{
    QProtobufMessage::operator=(other);
    setTestFieldInt(other.m_testFieldInt);
    return *this;
}

SimpleIntMessageExt::SimpleIntMessageExt(SimpleIntMessageExt &&other) noexcept
    : QProtobufMessage(std::move(other))
{
    setTestFieldInt(std::exchange(other.m_testFieldInt, 0));
}

SimpleIntMessageExt &SimpleIntMessageExt::operator =(SimpleIntMessageExt &&other) noexcept
{
    QProtobufMessage::operator=(std::move(other));
    setTestFieldInt(std::exchange(other.m_testFieldInt, 0));
    return *this;
}

bool SimpleIntMessageExt::operator ==(const SimpleIntMessageExt &other) const
{
    return QProtobufMessage::isEqual(*this, other)
        && m_testFieldInt == other.m_testFieldInt;
}

bool SimpleIntMessageExt::operator !=(const SimpleIntMessageExt &other) const
{
    return !this->operator ==(other);
}


#include "moc_nopackageexternal.qpb.cpp"
